{"ast":null,"code":"var _jsxFileName = \"/home/labdelante/Proyectos/Proyectos-Bel/React-drag-and-drop/React-dnd/src/components/Dragndrop.js\";\nimport React, { useState, useRef, useEffect } from 'react';\n\nfunction DragNDrop({\n  data\n}) {\n  const [list, setList] = useState(data);\n  const [dragging, setDragging] = useState(false);\n  useEffect(() => {\n    setList(data);\n  }, [setList, data]);\n  const dragItem = useRef();\n  const dragItemNode = useRef();\n\n  const handletDragStart = (e, item) => {\n    console.log('Starting to drag', item);\n    dragItemNode.current = e.target;\n    dragItemNode.current.addEventListener('dragend', handleDragEnd);\n    dragItem.current = item;\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n\n  const handleDragEnter = (e, targetItem) => {\n    console.log('Entering a drag target', targetItem);\n\n    if (dragItemNode.current !== e.target) {\n      console.log('Target is NOT the same as dragged item');\n      setList(oldList => {\n        let newList = JSON.parse(JSON.stringify(oldList));\n        newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI, 1)[0]);\n        dragItem.current = targetItem;\n        localStorage.setItem('List', JSON.stringify(newList));\n        return newList;\n      });\n    }\n  };\n\n  const handleDragEnd = e => {\n    setDragging(false);\n    dragItem.current = null;\n    dragItemNode.current.removeEventListener('dragend', handleDragEnd);\n    dragItemNode.current = null;\n  };\n\n  const getStyles = item => {\n    if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {// return 'dnd-item current';\n    }\n\n    return 'dnd-item';\n  };\n\n  if (list) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drag-n-drop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, list.map((grp, grpI) => /*#__PURE__*/React.createElement(\"div\", {\n      key: grp.title,\n      onDragEnter: dragging && !grp.items.length ? e => handleDragEnter(e, {\n        grpI,\n        itemI: 0\n      }) : null,\n      className: \"dnd-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, grp.items.map((item, itemI) => /*#__PURE__*/React.createElement(\"div\", {\n      draggable: true,\n      key: item,\n      onDragStart: e => handletDragStart(e, {\n        grpI,\n        itemI\n      }),\n      onDragEnter: dragging ? e => {\n        handleDragEnter(e, {\n          grpI,\n          itemI\n        });\n      } : null,\n      className: dragging ? getStyles({\n        grpI,\n        itemI\n      }) : 'dnd-item',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, item)))));\n  } else {\n    return null;\n  }\n}\n\nexport default DragNDrop;","map":{"version":3,"sources":["/home/labdelante/Proyectos/Proyectos-Bel/React-drag-and-drop/React-dnd/src/components/Dragndrop.js"],"names":["React","useState","useRef","useEffect","DragNDrop","data","list","setList","dragging","setDragging","dragItem","dragItemNode","handletDragStart","e","item","console","log","current","target","addEventListener","handleDragEnd","setTimeout","handleDragEnter","targetItem","oldList","newList","JSON","parse","stringify","grpI","items","splice","itemI","localStorage","setItem","removeEventListener","getStyles","map","grp","title","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA6B;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAACI,IAAD,CAAhC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,KAAD,CAAxC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,OAAO,CAACF,IAAD,CAAP;AACD,GAFQ,EAEN,CAACE,OAAD,EAAUF,IAAV,CAFM,CAAT;AAIA,QAAMK,QAAQ,GAAGR,MAAM,EAAvB;AACA,QAAMS,YAAY,GAAGT,MAAM,EAA3B;;AAEA,QAAMU,gBAAgB,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AAEAH,IAAAA,YAAY,CAACM,OAAb,GAAuBJ,CAAC,CAACK,MAAzB;AACAP,IAAAA,YAAY,CAACM,OAAb,CAAqBE,gBAArB,CAAsC,SAAtC,EAAiDC,aAAjD;AACAV,IAAAA,QAAQ,CAACO,OAAT,GAAmBH,IAAnB;AAEAO,IAAAA,UAAU,CAAC,MAAM;AACfZ,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GAVD;;AAWA,QAAMa,eAAe,GAAG,CAACT,CAAD,EAAIU,UAAJ,KAAmB;AACzCR,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCO,UAAtC;;AACA,QAAIZ,YAAY,CAACM,OAAb,KAAyBJ,CAAC,CAACK,MAA/B,EAAuC;AACrCH,MAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAT,MAAAA,OAAO,CAAEiB,OAAD,IAAa;AACnB,YAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,OAAf,CAAX,CAAd;AACAC,QAAAA,OAAO,CAACF,UAAU,CAACM,IAAZ,CAAP,CAAyBC,KAAzB,CAA+BC,MAA/B,CAAsCR,UAAU,CAACS,KAAjD,EAAwD,CAAxD,EAA2DP,OAAO,CAACf,QAAQ,CAACO,OAAT,CAAiBY,IAAlB,CAAP,CAA+BC,KAA/B,CAAqCC,MAArC,CAA4CrB,QAAQ,CAACO,OAAT,CAAiBe,KAA7D,EAAoE,CAApE,EAAuE,CAAvE,CAA3D;AACAtB,QAAAA,QAAQ,CAACO,OAAT,GAAmBM,UAAnB;AACAU,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACE,SAAL,CAAeH,OAAf,CAA7B;AACA,eAAOA,OAAP;AACD,OANM,CAAP;AAOD;AACF,GAZD;;AAaA,QAAML,aAAa,GAAIP,CAAD,IAAO;AAC3BJ,IAAAA,WAAW,CAAC,KAAD,CAAX;AACAC,IAAAA,QAAQ,CAACO,OAAT,GAAmB,IAAnB;AACAN,IAAAA,YAAY,CAACM,OAAb,CAAqBkB,mBAArB,CAAyC,SAAzC,EAAoDf,aAApD;AACAT,IAAAA,YAAY,CAACM,OAAb,GAAuB,IAAvB;AACD,GALD;;AAMA,QAAMmB,SAAS,GAAItB,IAAD,IAAU;AAC1B,QAAIJ,QAAQ,CAACO,OAAT,CAAiBY,IAAjB,KAA0Bf,IAAI,CAACe,IAA/B,IAAuCnB,QAAQ,CAACO,OAAT,CAAiBe,KAAjB,KAA2BlB,IAAI,CAACkB,KAA3E,EAAkF,CAChF;AACD;;AACD,WAAO,UAAP;AACD,GALD;;AAOA,MAAI1B,IAAJ,EAAU;AACR,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IAAI,CAAC+B,GAAL,CAAS,CAACC,GAAD,EAAMT,IAAN,kBACR;AAAK,MAAA,GAAG,EAAES,GAAG,CAACC,KAAd;AAAqB,MAAA,WAAW,EAAE/B,QAAQ,IAAI,CAAC8B,GAAG,CAACR,KAAJ,CAAUU,MAAvB,GAAiC3B,CAAD,IAAOS,eAAe,CAACT,CAAD,EAAI;AAAEgB,QAAAA,IAAF;AAAQG,QAAAA,KAAK,EAAE;AAAf,OAAJ,CAAtD,GAAgF,IAAlH;AAAwH,MAAA,SAAS,EAAC,WAAlI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,GAAG,CAACR,KAAJ,CAAUO,GAAV,CAAc,CAACvB,IAAD,EAAOkB,KAAP,kBACb;AACE,MAAA,SAAS,MADX;AAEE,MAAA,GAAG,EAAElB,IAFP;AAGE,MAAA,WAAW,EAAGD,CAAD,IAAOD,gBAAgB,CAACC,CAAD,EAAI;AAAEgB,QAAAA,IAAF;AAAQG,QAAAA;AAAR,OAAJ,CAHtC;AAIE,MAAA,WAAW,EACTxB,QAAQ,GACHK,CAAD,IAAO;AACLS,QAAAA,eAAe,CAACT,CAAD,EAAI;AAAEgB,UAAAA,IAAF;AAAQG,UAAAA;AAAR,SAAJ,CAAf;AACD,OAHG,GAIJ,IATR;AAWE,MAAA,SAAS,EAAExB,QAAQ,GAAG4B,SAAS,CAAC;AAAEP,QAAAA,IAAF;AAAQG,QAAAA;AAAR,OAAD,CAAZ,GAAgC,UAXrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaGlB,IAbH,CADD,CADH,CADD,CADH,CADF;AAyBD,GA1BD,MA0BO;AACL,WAAO,IAAP;AACD;AACF;;AAED,eAAeV,SAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nfunction DragNDrop({ data }) {\n  const [list, setList] = useState(data);\n  const [dragging, setDragging] = useState(false);\n\n  useEffect(() => {\n    setList(data);\n  }, [setList, data]);\n\n  const dragItem = useRef();\n  const dragItemNode = useRef();\n\n  const handletDragStart = (e, item) => {\n    console.log('Starting to drag', item);\n\n    dragItemNode.current = e.target;\n    dragItemNode.current.addEventListener('dragend', handleDragEnd);\n    dragItem.current = item;\n\n    setTimeout(() => {\n      setDragging(true);\n    }, 0);\n  };\n  const handleDragEnter = (e, targetItem) => {\n    console.log('Entering a drag target', targetItem);\n    if (dragItemNode.current !== e.target) {\n      console.log('Target is NOT the same as dragged item');\n      setList((oldList) => {\n        let newList = JSON.parse(JSON.stringify(oldList));\n        newList[targetItem.grpI].items.splice(targetItem.itemI, 0, newList[dragItem.current.grpI].items.splice(dragItem.current.itemI, 1)[0]);\n        dragItem.current = targetItem;\n        localStorage.setItem('List', JSON.stringify(newList));\n        return newList;\n      });\n    }\n  };\n  const handleDragEnd = (e) => {\n    setDragging(false);\n    dragItem.current = null;\n    dragItemNode.current.removeEventListener('dragend', handleDragEnd);\n    dragItemNode.current = null;\n  };\n  const getStyles = (item) => {\n    if (dragItem.current.grpI === item.grpI && dragItem.current.itemI === item.itemI) {\n      // return 'dnd-item current';\n    }\n    return 'dnd-item';\n  };\n\n  if (list) {\n    return (\n      <div className=\"drag-n-drop\">\n        {list.map((grp, grpI) => (\n          <div key={grp.title} onDragEnter={dragging && !grp.items.length ? (e) => handleDragEnter(e, { grpI, itemI: 0 }) : null} className=\"dnd-group\">\n            {grp.items.map((item, itemI) => (\n              <div\n                draggable\n                key={item}\n                onDragStart={(e) => handletDragStart(e, { grpI, itemI })}\n                onDragEnter={\n                  dragging\n                    ? (e) => {\n                        handleDragEnter(e, { grpI, itemI });\n                      }\n                    : null\n                }\n                className={dragging ? getStyles({ grpI, itemI }) : 'dnd-item'}\n              >\n                {item}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default DragNDrop;\n"]},"metadata":{},"sourceType":"module"}